version: '3'
services:
    laravel:
        build:
            context: ./vendor/laravel/sail/runtimes/8.2
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.2/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        healthcheck:
            test: "bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/80; exit $?;'"
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 30s
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mysql
            - redis
            - rabbit
        links:
            - rabbit
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '6379:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    rabbit:
        image: 'rabbitmq:3-management-alpine'
        ports:
            - '5672:5672'
            - '15672:15672'
        healthcheck:
            test: rabbitmq-diagnostics -q ping
            interval: 30s
            timeout: 30s
            retries: 3
        environment:
            - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbitmq_management load_definitions "/tmp/rabbit-definitions.json"
        volumes:
            - type: bind
              source: ./rabbit-definitions.json
              target: /tmp/rabbit-definitions.json
        networks:
            - sail
    fe:
        image: "node"
        user: "node"
        working_dir: /home/node/app
        volumes:
            - ../fe-service:/home/node/app
        ports:
            - "3000:3000"
        command: "npm start"
        depends_on:
            - meta
            - laravel
        networks:
            - sail
    meta:
        image: "node"
        user: "node"
        working_dir: /home/node/app
        volumes:
            - ../meta-service:/home/node/app
        ports:
            - "4000:4000"
        command: "node index.js"
        networks:
            - sail

    # TODO: this should allow multiple consumers to be executed, but since there is only, this works for now
    job:
        image: "node"
        user: "node"
        restart: unless-stopped
        working_dir: /home/node/app
        volumes:
            - ../meta-service:/home/node/app
        command: "node consumer.js movie-created"
        depends_on:
            laravel:
                condition: service_healthy
            rabbit:
                condition: service_healthy
        links:
            - rabbit
            - laravel
        networks:
            - sail
networks:
    sail:
        driver: bridge
volumes:
    sail-mysql:
        driver: local
    sail-redis:
        driver: local
